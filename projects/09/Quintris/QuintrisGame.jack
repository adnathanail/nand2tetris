// Copyright (c) 2025-03-08 Alex Nathanail
// All rights reserved

/**
 * TODO document
 */

class QuintrisGame {
   // Side length of squares making up the piece in pixels (16)
   static int size;
   // Width and height of screen in px
   static int screen_width_px;
   static int screen_height_px;
   // Width and height of screen in grid blocks
   static int screen_width;
   static int screen_height;

   // Current active game piece
   field Piece piece;
   // Grid of placed squares
   field Grid grid;

   /** Constructs a new Square Game. */
   constructor QuintrisGame new() {
      // Initialise classes static variables
      let size = 16;
      let screen_width_px = 512;
      let screen_height_px = 256;

      // Calculate some static variables
      let screen_width = screen_width_px / size;
      let screen_height = screen_height_px / size;

      // Create a piece and a grid
      let piece = Piece.new(this);
      let grid = Grid.new(this);
      return this;
   }

   method void run() {
      var char key;  // the key currently pressed by the user
      var Array pieceSquares;
      var int i;

      while (true) {
         while (grid.canMove(piece.tryToDrop(), piece.getNumSquares())) {
            do grid.draw();
            do Sys.wait(50);
            do piece.acceptMove();
            let key = Keyboard.keyPressed();
            if ((key = 131) & grid.canMove(piece.tryToMoveUp(), piece.getNumSquares())) { do piece.acceptMove(); }   // up arrow
            if ((key = 133) & grid.canMove(piece.tryToMoveDown(), piece.getNumSquares())) { do piece.acceptMove(); }   // down arrow
         }

         let pieceSquares = piece.getPieceSquares();
         let i = 0;
         while (i < piece.getNumSquares()) {
            do grid.setGridSquare(pieceSquares[i * 2], pieceSquares[(i * 2) + 1]);
            let i = i + 1;
         }
         do piece.dispose();
         do grid.draw();
         let piece = Piece.new(this);
      }

      return;
   }

   /** Disposes this game. */
   method void dispose() {
      do piece.dispose();
      do grid.dispose();
      do Memory.deAlloc(this);
      return;
   }

   method int getSize() {
      return size;
   }

   method int getScreenHeight() {
      return screen_height;
   }

   method int getScreenWidth() {
      return screen_width;
   }
}
