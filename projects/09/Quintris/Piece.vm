function Piece._setSquare 0
push argument 0
pop pointer 0
push argument 1
push constant 2
call Math.multiply 2
push this 3
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push constant 2
call Math.multiply 2
push constant 1
add
push this 3
add
push argument 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 4
push argument 2
push constant 1
add
call Math.max 2
pop this 4
push this 5
push argument 3
push constant 1
add
call Math.max 2
pop this 5
push constant 0
return
function Piece.new 0
push constant 6
call Memory.alloc 1
pop pointer 0
push argument 0
pop argument 0
push constant 5
pop static 0
push constant 0
pop this 1
push constant 0
pop this 2
push static 0
push constant 2
call Math.multiply 2
call Array.new 1
pop this 3
push pointer 0
push constant 0
push constant 0
push constant 0
call Piece._setSquare 4
pop temp 0
push pointer 0
push constant 1
push constant 1
push constant 0
call Piece._setSquare 4
pop temp 0
push pointer 0
push constant 2
push constant 0
push constant 1
call Piece._setSquare 4
pop temp 0
push pointer 0
push constant 3
push constant 1
push constant 1
call Piece._setSquare 4
pop temp 0
push pointer 0
push constant 4
push constant 1
push constant 2
call Piece._setSquare 4
pop temp 0
push pointer 0
push constant 0
not
call Piece.draw 2
pop temp 0
push pointer 0
return
function Piece.dispose 0
push argument 0
pop pointer 0
push this 3
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Piece.draw 3
push argument 0
pop pointer 0
push argument 1
call Screen.setColor 1
pop temp 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push static 0
lt
not
if-goto WHILE_END0
push this 1
push local 0
push constant 2
call Math.multiply 2
push this 3
add
pop pointer 1
push that 0
add
pop local 1
push this 2
push local 0
push constant 2
call Math.multiply 2
push constant 1
add
push this 3
add
pop pointer 1
push that 0
add
pop local 2
push local 1
push this 0
call QuintrisGame.getSize 1
call Math.multiply 2
push constant 1
add
push local 2
push this 0
call QuintrisGame.getSize 1
call Math.multiply 2
push constant 1
add
push local 1
push constant 1
add
push this 0
call QuintrisGame.getSize 1
call Math.multiply 2
push constant 1
sub
push local 2
push constant 1
add
push this 0
call QuintrisGame.getSize 1
call Math.multiply 2
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Piece.canDrop 0
push argument 0
pop pointer 0
push this 1
push this 4
add
push this 0
call QuintrisGame.getScreenWidth 1
lt
return
function Piece.canMoveUp 0
push argument 0
pop pointer 0
push this 2
push constant 0
gt
return
function Piece.canMoveDown 0
push argument 0
pop pointer 0
push this 2
push this 5
add
push this 0
call QuintrisGame.getScreenHeight 1
lt
return
function Piece.drop 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
call Piece.draw 2
pop temp 0
push this 1
push constant 1
add
pop this 1
push pointer 0
push constant 0
not
call Piece.draw 2
pop temp 0
push constant 0
return
function Piece.moveUp 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
call Piece.draw 2
pop temp 0
push this 2
push constant 1
sub
pop this 2
push pointer 0
push constant 0
not
call Piece.draw 2
pop temp 0
push constant 0
return
function Piece.moveDown 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
call Piece.draw 2
pop temp 0
push this 2
push constant 1
add
pop this 2
push pointer 0
push constant 0
not
call Piece.draw 2
pop temp 0
push constant 0
return
function Piece.getNumSquares 0
push argument 0
pop pointer 0
push static 0
return
function Piece.getPieceSquares 2
push argument 0
pop pointer 0
push static 0
push constant 2
call Math.multiply 2
call Array.new 1
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push static 0
lt
not
if-goto WHILE_END0
push local 1
push constant 2
call Math.multiply 2
push local 0
add
push this 1
push local 1
push constant 2
call Math.multiply 2
push this 3
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 2
call Math.multiply 2
push constant 1
add
push local 0
add
push this 2
push local 1
push constant 2
call Math.multiply 2
push constant 1
add
push this 3
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
