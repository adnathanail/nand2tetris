// SP = 256
@256                             // line 0
D=A                              // line 1
@SP                              // line 2
M=D                              // line 3
// call Sys.init 0
@Sys.init.return                 // line 4
D=A                              // line 5
@SP                              // line 6
A=M                              // line 7
M=D                              // line 8
@SP                              // line 9
M=M+1                            // line 10
@LCL                             // line 11
D=M                              // line 12
@SP                              // line 13
A=M                              // line 14
M=D                              // line 15
@SP                              // line 16
M=M+1                            // line 17
@ARG                             // line 18
D=M                              // line 19
@SP                              // line 20
A=M                              // line 21
M=D                              // line 22
@SP                              // line 23
M=M+1                            // line 24
@THIS                            // line 25
D=M                              // line 26
@SP                              // line 27
A=M                              // line 28
M=D                              // line 29
@SP                              // line 30
M=M+1                            // line 31
@THAT                            // line 32
D=M                              // line 33
@SP                              // line 34
A=M                              // line 35
M=D                              // line 36
@SP                              // line 37
M=M+1                            // line 38
@SP                              // line 39
D=M                              // line 40
@5                               // line 41
D=D-A                            // line 42
@ARG                             // line 43
M=D                              // line 44
@SP                              // line 45
D=M                              // line 46
@LCL                             // line 47
M=D                              // line 48
@Sys.init                        // line 49
0;JMP                            // line 50
(Sys.init.return)

// --------
// Main.vm
// --------

// function Main.fibonacci 0
(Main.fibonacci)
// push argument 0
@ARG                             // line 51
D=M                              // line 52
@0                               // line 53
D=D+A                            // line 54
A=D                              // line 55
D=M                              // line 56
@SP                              // line 57
A=M                              // line 58
M=D                              // line 59
@SP                              // line 60
M=M+1                            // line 61
// push constant 2
@2                               // line 62
D=A                              // line 63
@SP                              // line 64
A=M                              // line 65
M=D                              // line 66
@SP                              // line 67
M=M+1                            // line 68
// lt
@SP                              // line 69
M=M-1                            // line 70
A=M                              // line 71
D=M                              // line 72
@SP                              // line 73
M=M-1                            // line 74
A=M                              // line 75
D=M-D                            // line 76
@EQT0                            // line 77
D;JLT                            // line 78
@SP                              // line 79
A=M                              // line 80
M=0                              // line 81
@EQC0                            // line 82
0;JMP                            // line 83
(EQT0)
@SP                              // line 84
A=M                              // line 85
M=-1                             // line 86
(EQC0)
@SP                              // line 87
M=M+1                            // line 88
// if-goto IF_TRUE
@SP                              // line 89
M=M-1                            // line 90
A=M                              // line 91
D=M                              // line 92
@IF_TRUE                         // line 93
D;JNE                            // line 94
// goto IF_FALSE
@IF_FALSE                        // line 95
0;JMP                            // line 96
// label IF_TRUE
(IF_TRUE)
// push argument 0
@ARG                             // line 97
D=M                              // line 98
@0                               // line 99
D=D+A                            // line 100
A=D                              // line 101
D=M                              // line 102
@SP                              // line 103
A=M                              // line 104
M=D                              // line 105
@SP                              // line 106
M=M+1                            // line 107
// return
@LCL                             // line 108
D=M                              // line 109
@endFrame                        // line 110
M=D                              // line 111
@5                               // line 112
D=D-A                            // line 113
A=D                              // line 114
D=M                              // line 115
@retAddr                         // line 116
M=D                              // line 117
@SP                              // line 118
M=M-1                            // line 119
A=M                              // line 120
D=M                              // line 121
@ARG                             // line 122
A=M                              // line 123
M=D                              // line 124
@ARG                             // line 125
D=M+1                            // line 126
@SP                              // line 127
M=D                              // line 128
@endFrame                        // line 129
M=M-1                            // line 130
A=M                              // line 131
D=M                              // line 132
@THAT                            // line 133
M=D                              // line 134
@endFrame                        // line 135
M=M-1                            // line 136
A=M                              // line 137
D=M                              // line 138
@THIS                            // line 139
M=D                              // line 140
@endFrame                        // line 141
M=M-1                            // line 142
A=M                              // line 143
D=M                              // line 144
@ARG                             // line 145
M=D                              // line 146
@endFrame                        // line 147
M=M-1                            // line 148
A=M                              // line 149
D=M                              // line 150
@LCL                             // line 151
M=D                              // line 152
@retAddr                         // line 153
A=M                              // line 154
0;JMP                            // line 155
// label IF_FALSE
(IF_FALSE)
// push argument 0
@ARG                             // line 156
D=M                              // line 157
@0                               // line 158
D=D+A                            // line 159
A=D                              // line 160
D=M                              // line 161
@SP                              // line 162
A=M                              // line 163
M=D                              // line 164
@SP                              // line 165
M=M+1                            // line 166
// push constant 2
@2                               // line 167
D=A                              // line 168
@SP                              // line 169
A=M                              // line 170
M=D                              // line 171
@SP                              // line 172
M=M+1                            // line 173
// sub
@SP                              // line 174
M=M-1                            // line 175
A=M                              // line 176
D=M                              // line 177
@SP                              // line 178
M=M-1                            // line 179
A=M                              // line 180
M=M-D                            // line 181
@SP                              // line 182
M=M+1                            // line 183
// call Main.fibonacci 1
@Main.fibonacci.return           // line 184
D=A                              // line 185
@SP                              // line 186
A=M                              // line 187
M=D                              // line 188
@SP                              // line 189
M=M+1                            // line 190
@LCL                             // line 191
D=M                              // line 192
@SP                              // line 193
A=M                              // line 194
M=D                              // line 195
@SP                              // line 196
M=M+1                            // line 197
@ARG                             // line 198
D=M                              // line 199
@SP                              // line 200
A=M                              // line 201
M=D                              // line 202
@SP                              // line 203
M=M+1                            // line 204
@THIS                            // line 205
D=M                              // line 206
@SP                              // line 207
A=M                              // line 208
M=D                              // line 209
@SP                              // line 210
M=M+1                            // line 211
@THAT                            // line 212
D=M                              // line 213
@SP                              // line 214
A=M                              // line 215
M=D                              // line 216
@SP                              // line 217
M=M+1                            // line 218
@SP                              // line 219
D=M                              // line 220
@6                               // line 221
D=D-A                            // line 222
@ARG                             // line 223
M=D                              // line 224
@SP                              // line 225
D=M                              // line 226
@LCL                             // line 227
M=D                              // line 228
@Main.fibonacci                  // line 229
0;JMP                            // line 230
(Main.fibonacci.return)
// push argument 0
@ARG                             // line 231
D=M                              // line 232
@0                               // line 233
D=D+A                            // line 234
A=D                              // line 235
D=M                              // line 236
@SP                              // line 237
A=M                              // line 238
M=D                              // line 239
@SP                              // line 240
M=M+1                            // line 241
// push constant 1
@1                               // line 242
D=A                              // line 243
@SP                              // line 244
A=M                              // line 245
M=D                              // line 246
@SP                              // line 247
M=M+1                            // line 248
// sub
@SP                              // line 249
M=M-1                            // line 250
A=M                              // line 251
D=M                              // line 252
@SP                              // line 253
M=M-1                            // line 254
A=M                              // line 255
M=M-D                            // line 256
@SP                              // line 257
M=M+1                            // line 258
// call Main.fibonacci 1
@Main.fibonacci.return           // line 259
D=A                              // line 260
@SP                              // line 261
A=M                              // line 262
M=D                              // line 263
@SP                              // line 264
M=M+1                            // line 265
@LCL                             // line 266
D=M                              // line 267
@SP                              // line 268
A=M                              // line 269
M=D                              // line 270
@SP                              // line 271
M=M+1                            // line 272
@ARG                             // line 273
D=M                              // line 274
@SP                              // line 275
A=M                              // line 276
M=D                              // line 277
@SP                              // line 278
M=M+1                            // line 279
@THIS                            // line 280
D=M                              // line 281
@SP                              // line 282
A=M                              // line 283
M=D                              // line 284
@SP                              // line 285
M=M+1                            // line 286
@THAT                            // line 287
D=M                              // line 288
@SP                              // line 289
A=M                              // line 290
M=D                              // line 291
@SP                              // line 292
M=M+1                            // line 293
@SP                              // line 294
D=M                              // line 295
@6                               // line 296
D=D-A                            // line 297
@ARG                             // line 298
M=D                              // line 299
@SP                              // line 300
D=M                              // line 301
@LCL                             // line 302
M=D                              // line 303
@Main.fibonacci                  // line 304
0;JMP                            // line 305
(Main.fibonacci.return)
// add
@SP                              // line 306
M=M-1                            // line 307
A=M                              // line 308
D=M                              // line 309
@SP                              // line 310
M=M-1                            // line 311
A=M                              // line 312
M=M+D                            // line 313
@SP                              // line 314
M=M+1                            // line 315
// return
@LCL                             // line 316
D=M                              // line 317
@endFrame                        // line 318
M=D                              // line 319
@5                               // line 320
D=D-A                            // line 321
A=D                              // line 322
D=M                              // line 323
@retAddr                         // line 324
M=D                              // line 325
@SP                              // line 326
M=M-1                            // line 327
A=M                              // line 328
D=M                              // line 329
@ARG                             // line 330
A=M                              // line 331
M=D                              // line 332
@ARG                             // line 333
D=M+1                            // line 334
@SP                              // line 335
M=D                              // line 336
@endFrame                        // line 337
M=M-1                            // line 338
A=M                              // line 339
D=M                              // line 340
@THAT                            // line 341
M=D                              // line 342
@endFrame                        // line 343
M=M-1                            // line 344
A=M                              // line 345
D=M                              // line 346
@THIS                            // line 347
M=D                              // line 348
@endFrame                        // line 349
M=M-1                            // line 350
A=M                              // line 351
D=M                              // line 352
@ARG                             // line 353
M=D                              // line 354
@endFrame                        // line 355
M=M-1                            // line 356
A=M                              // line 357
D=M                              // line 358
@LCL                             // line 359
M=D                              // line 360
@retAddr                         // line 361
A=M                              // line 362
0;JMP                            // line 363

// -------
// Sys.vm
// -------

// function Sys.init 0
(Sys.init)
// push constant 2
@2                               // line 364
D=A                              // line 365
@SP                              // line 366
A=M                              // line 367
M=D                              // line 368
@SP                              // line 369
M=M+1                            // line 370
// call Main.fibonacci 1
@Main.fibonacci.return           // line 371
D=A                              // line 372
@SP                              // line 373
A=M                              // line 374
M=D                              // line 375
@SP                              // line 376
M=M+1                            // line 377
@LCL                             // line 378
D=M                              // line 379
@SP                              // line 380
A=M                              // line 381
M=D                              // line 382
@SP                              // line 383
M=M+1                            // line 384
@ARG                             // line 385
D=M                              // line 386
@SP                              // line 387
A=M                              // line 388
M=D                              // line 389
@SP                              // line 390
M=M+1                            // line 391
@THIS                            // line 392
D=M                              // line 393
@SP                              // line 394
A=M                              // line 395
M=D                              // line 396
@SP                              // line 397
M=M+1                            // line 398
@THAT                            // line 399
D=M                              // line 400
@SP                              // line 401
A=M                              // line 402
M=D                              // line 403
@SP                              // line 404
M=M+1                            // line 405
@SP                              // line 406
D=M                              // line 407
@6                               // line 408
D=D-A                            // line 409
@ARG                             // line 410
M=D                              // line 411
@SP                              // line 412
D=M                              // line 413
@LCL                             // line 414
M=D                              // line 415
@Main.fibonacci                  // line 416
0;JMP                            // line 417
(Main.fibonacci.return)
// label WHILE
(WHILE)
// goto WHILE
@WHILE                           // line 418
0;JMP                            // line 419